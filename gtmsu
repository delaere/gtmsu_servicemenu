#!/bin/bash

if [ -f "$HOME/.tmsu/VARS" ]; then
    . $HOME/.tmsu/VARS
fi

[ ! -f "$TMSU_DB" ] && export TMSU_DB= 
db=${TMSU_DB:-$HOME/.tmsu/default.db}
out=$(mktemp /tmp/tmsu.XXXX.out)
err=$(mktemp /tmp/tmsu.XXXX.err)
PWD=$(pwd)

function list_all_tags () {
    echo 'select name from tag;' | sqlite3 $db
}

if [ "$1" == "tag" ]; then
    shift
    files=("$@")
    if [ ! -s $db ]; then
        tag_initial=$(zenity --width 400 --height 250 --entry --title="gtmsu $db" --text "Create your 1st tag:" --entry-text "example.tag");
        tmsu tag --tags "$tag_initial" "${files[@]}" > $out 2> $err
    else
        tags=$(list_all_tags | zenity --width 400 --height 250 --list --title="gtmsu $db" --text="Enter, edit or create new tag(s)" --column=tags --editable --multiple --separator=' ')
        if [ $? -eq 0 -a -n "$tags" ]; then
            tmsu tag --tags "$tags" "${files[@]}" > $out 2> $err
        fi
    fi
    
    ret=$?
    if [[ $ret ]]; then
        txt="Return code: $ret\n\nStderr:\n$(cat $err)\n\nStdout:\n$(cat $out)"
        if [ $ret -gt 0 ]; then
            zenity --width 400 --height 250 --title="gtmsu $db" --warning --text="$txt"
        #else
        #    zenity --width 400 --height 250 --title="gtmsu $db" --info --text="$txt"
        fi
    fi
elif [ "$1" == "mount" ]; then
    txt=$(zenity --entry --text "Create a path to where "tags" directory should mount:" --entry-text "/media/truecrypt3/Videos")
    mkdir -p "$txt"
    if [ -d "$txt" ]; then
        tmsu mount "$txt"
        if [ $? -eq 0 ]; then
            cd "$txt/tags"
            tags_ls=$(ls)
            cd $PWD
            zenity --info --text "Tags successsfully mounted at $txt.\n\n$tags_ls"
        else
            zenity --info --text "Tags Failed to mount at $txt.\n\nMountpoint is not empty."
        fi
    fi
    #
    echo ""
elif [ "$1" == "edit" ]; then
    #
    echo ""
elif [ "$1" == "db" ]; then
        what_do=$(zenity --question --ok-label "Select a database to use" --cancel-label "Create a new tag database" --text "What to do?")
        if [ $what_do -eq 0 ]; then ## Select a database to use
            zenity --info --text "Browse to your .db file\n(usually located in ~/.tmsu/)"
            db_location=$(zenity --file-selection)
            if [ -f "$db_location" ]; then
                echo "TMSU_DB=$db_location" > "$HOME/.tmsu/VARS"
                zenity --info --text "Tags database now set to $db_location"
            fi
        else # Create a new tag database
            tags_db=$(zenity --entry --text "Create a custom name for your tags database:" --entry-text "Music")
            if [ ! -f "$HOME/.tmsu/$tags_db.db" ]; then
                touch "$HOME/.tmsu/$tags_db.db"
                echo "TMSU_DB=$HOME/.tmsu/$tags_db.db" > "$HOME/.tmsu/VARS"
                zenity --info --text "Tags database $tags_db has been created at $HOME/.tmsu/$tags_db.db"
            else
                zenity --warning --text "Tags database $tags_db could not be created at $HOME/.tmsu/$tags_db.db\n\nPerhaps this file exists already?"
            fi
        fi
elif [ "$1" == "import" ]; then
    zenity --info --text "Browse to your tags.txt\n(a file containing a list of tags, 1 per line)"
    tags_list=$(zenity --file-selection)
    if [ -f "$tags_list" ]; then
        file_name=".wee$$"
        touch "$file_name"
        tags_file=$(cat "$tags_list")
        tags_count=$(cat "$tags_file" | wc -l)
        for fn in $tags_file
         do
            tmsu tag "$file_name" $fn
        done | zenity --progress --title="Importing tags" --text="This may take a while..." --pulsate --width=400 --auto-close
        zenity --info --text "Imported $tags_count tags successfully."
        rm "$file_name"
    else
        zenity --error --text "Import failed! No such file: $tags_list"
    fi
fi

exit 0
